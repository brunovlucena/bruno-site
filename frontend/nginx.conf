server {
    listen       8080;
    listen  [::]:8080;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    # ðŸ”’ Security Headers - Protect against common web vulnerabilities
    # Content Security Policy - Prevents XSS attacks
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';" always;
    
    # X-Frame-Options - Prevents clickjacking attacks
    add_header X-Frame-Options "SAMEORIGIN" always;
    
    # X-Content-Type-Options - Prevents MIME sniffing
    add_header X-Content-Type-Options "nosniff" always;
    
    # X-XSS-Protection - Additional XSS protection for older browsers
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Referrer-Policy - Controls referrer information
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Strict-Transport-Security - Enforces HTTPS (max-age: 1 year)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Permissions-Policy - Controls browser features
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()" always;
    
    # Cross-Origin-Embedder-Policy - Prevents data leaks
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    
    # Cross-Origin-Opener-Policy - Isolates browsing contexts
    add_header Cross-Origin-Opener-Policy "same-origin" always;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Handle API requests
    location /api {
        proxy_pass http://api:8080/api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add headers for Ollama connection
        proxy_set_header Connection "";
        proxy_http_version 1.1;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
