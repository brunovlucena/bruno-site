name: Build and Push Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild (skip cache)'
        required: false
        default: 'false'
        type: boolean
      build_api:
        description: 'Build API image'
        required: false
        default: 'true'
        type: boolean
      build_frontend:
        description: 'Build Frontend image'
        required: false
        default: 'true'
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_API: ${{ github.repository }}/api
  IMAGE_NAME_FRONTEND: ${{ github.repository }}/frontend

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: api
            context: ./api
            file: ./api/Dockerfile
            tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}:dev,${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}:latest
            condition: ${{ github.event_name == 'push' || github.event.inputs.build_api == 'true' }}
          - name: frontend
            context: ./frontend
            file: ./frontend/Dockerfile
            tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:dev,${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}:latest
            condition: ${{ github.event_name == 'push' || github.event.inputs.build_frontend == 'true' }}
    
    if: matrix.condition
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ matrix.name }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: true
          no-cache: ${{ github.event.inputs.force_rebuild == 'true' }}
          tags: ${{ matrix.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
      - name: Output ${{ matrix.name }} image tags
        run: |
          echo "âœ… ${{ matrix.name }} image built and pushed successfully!"
          echo "Tags: ${{ matrix.tags }}"

