{{- if .Values.database.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bruno-site.fullname" . }}-postgres
  labels:
    {{- include "bruno-site.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "bruno-site.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  template:
    metadata:
      labels:
        {{- include "bruno-site.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
    spec:
      initContainers:
        - name: db-init
          image: postgres:16-alpine
          command:
            - /bin/sh
            - -c
            - |
              echo "üóÑÔ∏è Waiting for PostgreSQL to be ready..."
              until pg_isready -h localhost -p 5432 -U {{ .Values.database.user }} -d {{ .Values.database.name }}; do
                echo "‚è≥ PostgreSQL is not ready yet. Waiting..."
                sleep 5
              done
              echo "‚úÖ PostgreSQL is ready. Running migrations..."
              
              # Run complete schema migration
              echo "üîÑ Running 001_complete_schema.sql..."
              psql -h localhost -p 5432 -U {{ .Values.database.user }} -d {{ .Values.database.name }} -f /migrations/001_complete_schema.sql
              
              echo "‚úÖ Database initialization completed successfully!"
          env:
            - name: PGPASSWORD
              {{- if .Values.database.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: password
              {{- else if .Values.secrets.databasePassword }}
              value: {{ .Values.secrets.databasePassword | quote }}
              {{- else }}
              value: "secure-password"
              {{- end }}
          volumeMounts:
            - name: migrations
              mountPath: /migrations
      containers:
        - name: postgres
          image: postgres:16-alpine
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.database.name }}
            - name: POSTGRES_USER
              value: {{ .Values.database.user }}
            - name: POSTGRES_PASSWORD
              {{- if .Values.database.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.existingSecret }}
                  key: password
              {{- else if .Values.secrets.databasePassword }}
              value: {{ .Values.secrets.databasePassword | quote }}
              {{- else }}
              value: "secure-password"
              {{- end }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U {{ .Values.database.user }} -d {{ .Values.database.name }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U {{ .Values.database.user }} -d {{ .Values.database.name }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
      volumes:
        - name: postgres-storage
          {{- if .Values.postgres.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "bruno-site.fullname" . }}-postgres-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: migrations
          configMap:
            name: {{ include "bruno-site.fullname" . }}-migrations
{{- end }}
