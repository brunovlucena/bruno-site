services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bruno-postgres
    environment:
      POSTGRES_DB: bruno_site
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secure-password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./api/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - bruno-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bruno_site"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bruno-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bruno-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Bruno Site API Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: bruno-api
    environment:
      - DATABASE_URL=postgresql://postgres:secure-password@postgres:5432/bruno_site?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - PORT=8080
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bruno-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Bruno Site Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bruno-frontend
    environment:
      - VITE_API_URL=http://localhost:8080
      - VITE_APP_ENV=development
    ports:
      - "3000:8080"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - bruno-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:    # PostgreSQL database storage
  redis_data:       # Redis cache storage

networks:
  bruno-network:
    driver: bridge